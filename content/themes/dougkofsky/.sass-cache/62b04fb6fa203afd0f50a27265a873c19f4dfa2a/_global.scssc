3.2.10 (Media Mark)
02a1a81102cc6857a82cd5c56913b180ff78daa0
o:Sass::Tree::RootNode
:@template"û*//
// Global Foundation Mixins
//

$experimental: true !default;

// We use this to control border radius.
@mixin radius($radius:$global-radius) {
  @if $radius {
    @if $experimental {
      -webkit-border-radius: $radius;
    }
    border-radius: $radius;
  }
}

// We use this to create equal side border radius on elements.
@mixin side-radius($side, $radius:$global-radius) {
  @if $side == left {
    @if $experimental {
      -moz-border-radius-bottomleft: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-bottom-left-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == right {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-bottomright: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-bottom-right-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
  @else if $side == top {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == bottom {
    @if $experimental {
      -moz-border-radius-bottomright: $radius;
      -moz-border-radius-bottomleft: $radius;
      -webkit-border-bottom-right-radius: $radius;
      -webkit-border-bottom-left-radius: $radius;
    }
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

// We can control whether or not we have inset shadows edges.
@mixin inset-shadow($active:true) {
  @if $experimental {
    -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
  }
  box-shadow: $shiny-edge-size $shiny-edge-color inset;

  @if $active { &:active {
    @if $experimental {
      -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
    }
    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
}

// We use this to add transitions to elements
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
  @if $experimental {
    -webkit-transition: $property $speed $ease;
    -moz-transition: $property $speed $ease;
  }
  transition: $property $speed $ease;
}

// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
  @if $experimental {
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
  }
  box-sizing: $type;
}

// We use this to create equilateral triangles
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}

// We use this to do clear floats
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}


// We use this to add a glowing effect to block elements
@mixin block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:fade-out($primary-color, .25)) {
  @if $experimental {
    -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
    -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
  }
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    @if $experimental {
      -webkit-box-shadow: 0 0 5px $glowing-effect-color;
      -moz-box-shadow: 0 0 5px $glowing-effect-color;
    }
    box-shadow: 0 0 5px $glowing-effect-color;
    border-color: $glowing-effect-color;
  }
}

//
// Foundation Variables
//

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with brower-based text zoom or user-set defaults.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be different and not have it effect the grid breakpoints,
// set $em-base to $base-font-size and make sure $base-font-size is a px value.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
$base-line-height: 150% !default;

// This is the default html and body font-size for the base em value.
$em-base: 16px !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// New Syntax, allows to optionally calculate on a different base value to counter compounding effect of em's.
// Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported
// em-calc(10 20 30px 40);
// Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
// em-calc((10, 20, 30, 40px));
// Optionally call with a different base (eg: 8px) to calculate em.
// em-calc(16px 32px 48px, 8px);
// If you require to comma separate your list
// em-calc((16px, 32px, 48), 8px);

@function convert-to-em($value, $base-value: $em-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

@function em-calc($values, $base-value: $em-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-em(nth($values, 1), $base-value); }

  $emValues: ();
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
  }
  @return $emValues;
}

// Support for the old syntax

@function emCalc($values){
  @return em-calc($values);
}

// Maybe you want to create rems with pixels
// $rem-base: 0.625 !default; //Set the value corresponding to body font size. In this case, you should set as: body {font-size: 62.5%;}
// @function remCalc($pxWidth) {
//   @return $pxWidth / $rem-base * 1rem;
// }

// We use these to control various global styles
$body-bg: #fff !default;
$body-font-color: #222 !default;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

// We use this to control font-smoothing
$font-smoothing: subpixel-antialiased !default;

// We use these to control text direction settings
$text-direction: ltr !default;

// NOTE: No need to change this conditional statement, $text-direction variable controls it all.
$default-float: left !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}

// We use these as default colors throughout
$primary-color: #2ba6cb !default;
$secondary-color: #e9e9e9 !default;
$alert-color: #c60f13 !default;
$success-color: #5da423 !default;

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px !default;
$global-rounded: 1000px !default;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0 !default;
$shiny-edge-color: rgba(#fff, .5) !default;
$shiny-edge-active-color: rgba(#000, .2) !default;

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true !default;
$include-print-styles: true !default;
$include-html-global-classes: $include-html-classes !default;

// Media Queries
$small-screen: 768px !default;
$medium-screen: 1280px !default;
$large-screen: 1440px !default;

$screen: "only screen" !default;
$small: "only screen and (min-width: #{$small-screen})" !default;
$medium: "only screen and (min-width:#{$medium-screen})" !default;
$large: "only screen and (min-width:#{$large-screen})" !default;
$landscape: "only screen and (orientation: landscape)" !default;
$portrait: "only screen and (orientation: portrait)" !default;

// Used to provide media query values for javascript components.
meta.foundation-mq-small {
  font-family: $small;
  width: $small-screen;
}

meta.foundation-mq-medium {
  font-family: $medium;
  width: $medium-screen;
}

meta.foundation-mq-large {
  font-family: $large;
  width: $large-screen;
}

//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;


@if $include-html-global-classes {

  // Set box-sizing globally to handle padding and border widths
  *,
  *:before,
  *:after {
    @include box-sizing(border-box);
  }

  html,
  body { font-size: $base-font-size; }

  // Default body styles
  body {
    background: $body-bg;
    color: $body-font-color;
    padding: 0;
    margin: 0;
    font-family: $body-font-family;
    font-weight: $body-font-weight;
    font-style: $body-font-style;
    line-height: 1; // Set to $base-line-height to take on browser default of 150%
    position: relative;
    cursor: $cursor-default-value;
  }

a:hover { cursor: $cursor-pointer-value; }

  // Grid Defaults to get images and embeds to work properly
  img,
  object,
  embed { max-width: 100%; height: auto; }

  object,
  embed { height: 100%; }
  img { -ms-interpolation-mode: bicubic; }

  #map_canvas,
  .map_canvas {
    img,
    embed,
    object { max-width: none !important;
    }
  }

  // Miscellaneous useful HTML classes
  .left         { float: left !important; }
  .right        { float: right !important; }
  .text-left    { text-align: left !important; }
  .text-right   { text-align: right !important; }
  .text-center  { text-align: center !important; }
  .text-justify { text-align: justify !important; }
  .hide         { display: none; }

  // Font smoothing
  // Antialiased font smoothing works best for light text on a dark background.
  // Apply to single elements instead of globally to body.
  // Note this only applies to webkit-based desktop browsers on the Mac.
  .antialiased { -webkit-font-smoothing: antialiased; }

  // Get rid of gap under images by making them display: inline-block; by default
  img {
    display: inline-block;
    vertical-align: middle;
  }

  //
  // Global resets for forms
  //

  // Make sure textarea takes on height automatically
  textarea { height: auto; min-height: 50px; }

  // Make select elements 100% width by default
  select { width: 100%; }

}
:
@linei:@options{ :@has_childrenT:@children[Zo:Sass::Tree::CommentNode
;i;@;
[ :
@type:silent:@value[")/*
 * Global Foundation Mixins
 * */o:Sass::Tree::VariableNode;i
:@guarded"!default;@:
@name"experimental:
@expro:Sass::Script::Bool;i
;@;T;
[ o;
;i;@;
[ ;;;["0/* We use this to control border radius. */o:Sass::Tree::MixinDefNode;i;@;"radius;	T;
[u:Sass::Tree::IfNodeó[o:Sass::Script::Variable	:
@linei:@options{ :
@name"radius:@underscored_name"radius0[u:Sass::Tree::IfNodeø[o:Sass::Script::Variable	:
@linei:@options{ :
@name"experimental:@underscored_name"experimental0[o:Sass::Tree::PropNode;i;@;["-webkit-border-radius:@prop_syntax:new:@children[ :
@tabsi :@valueo; 	;i;@;"radius;	"radiuso:Sass::Tree::PropNode;i;@;["border-radius:@prop_syntax:new:@children[ :
@tabsi :@valueo; 	;i;@;"radius;	"radius:@splat0:
@args[[o:Sass::Script::Variable;@;"radius:@underscored_name"radiuso;	;i;@;"global-radius;"global_radiuso;
;i;@;
[ ;;;["F/* We use this to create equal side border radius on elements. */o;;i;@;"side-radius;	T;
[u;õ[o:Sass::Script::Operation
:
@linei:@operand1o:Sass::Script::Variable	;i:@options{ :
@name"	side:@underscored_name"	side;	@:@operator:eq:@operand2o:Sass::Script::String	;i;	@:
@type:identifier:@value"	leftu:Sass::Tree::IfNodeú[o:Sass::Script::Operation
:
@linei":@operand1o:Sass::Script::Variable	;i":@options{ :
@name"	side:@underscored_name"	side;	@:@operator:eq:@operand2o:Sass::Script::String	;i";	@:
@type:identifier:@value"
rightu:Sass::Tree::IfNodeø[o:Sass::Script::Operation
:
@linei,:@operand1o:Sass::Script::Variable	;i,:@options{ :
@name"	side:@underscored_name"	side;	@:@operator:eq:@operand2o:Sass::Script::String	;i,;	@:
@type:identifier:@value"topu:Sass::Tree::IfNode[o:Sass::Script::Operation
:
@linei6:@operand1o:Sass::Script::Variable	;i6:@options{ :
@name"	side:@underscored_name"	side;	@:@operator:eq:@operand2o:Sass::Script::String	;i6;	@:
@type:identifier:@value"bottom0[u:Sass::Tree::IfNode![o:Sass::Script::Variable	:
@linei7:@options{ :
@name"experimental:@underscored_name"experimental0[	o:Sass::Tree::PropNode;i8;@;["#-moz-border-radius-bottomright:@prop_syntax:new:@children[ :
@tabsi :@valueo; 	;i8;@;"radius;	"radiuso;
;i9;@;[""-moz-border-radius-bottomleft;;;[ ;i ;o; 	;i9;@;"radius;	"radiuso;
;i:;@;["'-webkit-border-bottom-right-radius;;;[ ;i ;o; 	;i:;@;"radius;	"radiuso;
;i;;@;["&-webkit-border-bottom-left-radius;;;[ ;i ;o; 	;i;;@;"radius;	"radiuso:Sass::Tree::PropNode;i=;	@;
["border-bottom-right-radius:@prop_syntax:new:@children[ :
@tabsi ;o;	;i=;	@;
"radius;"radiuso;;i>;	@;
["border-bottom-left-radius;;;[ ;i ;o;	;i>;	@;
"radius;"radius[u;[o:Sass::Script::Variable	:
@linei-:@options{ :
@name"experimental:@underscored_name"experimental0[	o:Sass::Tree::PropNode;i.;@;[" -moz-border-radius-topright:@prop_syntax:new:@children[ :
@tabsi :@valueo; 	;i.;@;"radius;	"radiuso;
;i/;@;["-moz-border-radius-topleft;;;[ ;i ;o; 	;i/;@;"radius;	"radiuso;
;i0;@;["$-webkit-border-top-right-radius;;;[ ;i ;o; 	;i0;@;"radius;	"radiuso;
;i1;@;["#-webkit-border-top-left-radius;;;[ ;i ;o; 	;i1;@;"radius;	"radiuso:Sass::Tree::PropNode;i3;	@;
["border-top-right-radius:@prop_syntax:new:@children[ :
@tabsi ;o;	;i3;	@;
"radius;"radiuso;;i4;	@;
["border-top-left-radius;;;[ ;i ;o;	;i4;	@;
"radius;"radius[u;[o:Sass::Script::Variable	:
@linei#:@options{ :
@name"experimental:@underscored_name"experimental0[	o:Sass::Tree::PropNode;i$;@;[" -moz-border-radius-topright:@prop_syntax:new:@children[ :
@tabsi :@valueo; 	;i$;@;"radius;	"radiuso;
;i%;@;["#-moz-border-radius-bottomright;;;[ ;i ;o; 	;i%;@;"radius;	"radiuso;
;i&;@;["$-webkit-border-top-right-radius;;;[ ;i ;o; 	;i&;@;"radius;	"radiuso;
;i';@;["'-webkit-border-bottom-right-radius;;;[ ;i ;o; 	;i';@;"radius;	"radiuso:Sass::Tree::PropNode;i);	@;
["border-top-right-radius:@prop_syntax:new:@children[ :
@tabsi ;o;	;i);	@;
"radius;"radiuso;;i*;	@;
["border-bottom-right-radius;;;[ ;i ;o;	;i*;	@;
"radius;"radius[u;[o:Sass::Script::Variable	:
@linei:@options{ :
@name"experimental:@underscored_name"experimental0[	o:Sass::Tree::PropNode;i;@;[""-moz-border-radius-bottomleft:@prop_syntax:new:@children[ :
@tabsi :@valueo; 	;i;@;"radius;	"radiuso;
;i;@;["-moz-border-radius-topleft;;;[ ;i ;o; 	;i;@;"radius;	"radiuso;
;i;@;["&-webkit-border-bottom-left-radius;;;[ ;i ;o; 	;i;@;"radius;	"radiuso;
;i;@;["#-webkit-border-top-left-radius;;;[ ;i ;o; 	;i;@;"radius;	"radiuso:Sass::Tree::PropNode;i;	@;
["border-bottom-left-radius:@prop_syntax:new:@children[ :
@tabsi ;o;	;i;	@;
"radius;"radiuso;;i ;	@;
["border-top-left-radius;;;[ ;i ;o;	;i ;	@;
"radius;"radius;0;[[o;;@;"	side;"	side0[o;;@;"radius;"radiuso;	;i;@;"global-radius;"global_radiuso;
;iB;@;
[ ;;;["E/* We can control whether or not we have inset shadows edges. */o;;iC;@;"inset-shadow;	T;
[u;¬[o:Sass::Script::Variable	:
@lineiD:@options{ :
@name"experimental:@underscored_name"experimental0[o:Sass::Tree::PropNode;iE;@;["-webkit-box-shadow:@prop_syntax:new:@children[ :
@tabsi :@valueo:Sass::Script::List	:@separator:
space;iE;@;[o; 	;iE;@;"shiny-edge-size;	"shiny_edge_sizeo; 	;iE;@;"shiny-edge-color;	"shiny_edge_coloro:Sass::Script::String	;iE;@:
@type:identifier;"
inseto:Sass::Tree::PropNode;iG;@;["box-shadow:@prop_syntax:new;
[ :
@tabsi ;o:Sass::Script::List	:@separator:
space;iG;@;[o;	;iG;@;"shiny-edge-size;"shiny_edge_sizeo;	;iG;@;"shiny-edge-color;"shiny_edge_coloro:Sass::Script::String	;iG;@;:identifier;"
insetu;ã[o:Sass::Script::Variable	:
@lineiI:@options{ :
@name"active:@underscored_name"active0[o:Sass::Tree::RuleNode:
@rule["&:active;iI;@:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;iI:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;@;iI;[o:Sass::Selector::Parent;@;iIo:Sass::Selector::Pseudo
;@;iI:	@arg0;["active:
@type:
class:@sourceso:Set:
@hash{ :@subject0:@has_childrenT:@children[u:Sass::Tree::IfNodeº[o:Sass::Script::Variable	:
@lineiJ:@options{ :
@name"experimental:@underscored_name"experimental0[o:Sass::Tree::PropNode;iK;@;["-webkit-box-shadow:@prop_syntax:new:@children[ :
@tabsi :@valueo:Sass::Script::List	:@separator:
space;iK;@;[o; 	;iK;@;"shiny-edge-size;	"shiny_edge_sizeo; 	;iK;@;"shiny-edge-active-color;	"shiny_edge_active_coloro:Sass::Script::String	;iK;@:
@type:identifier;"
inseto:Sass::Tree::PropNode;iM;@;["box-shadow:@prop_syntax:new;[ :
@tabsi :@valueo:Sass::Script::List	:@separator:
space;iM;@;"[o; 	;iM;@;"shiny-edge-size;	"shiny_edge_sizeo; 	;iM;@;"shiny-edge-active-color;	"shiny_edge_active_coloro:Sass::Script::String	;iM;@;:identifier;""
inset;!i ;0;[[o;;@;"active;"activeo;;iC;@;To;
;iP;@;
[ ;;;["5/* We use this to add transitions to elements */o;;iQ;@;"single-transition;	T;
[u;	[o:Sass::Script::Variable	:
@lineiR:@options{ :
@name"experimental:@underscored_name"experimental0[o:Sass::Tree::PropNode;iS;@;["-webkit-transition:@prop_syntax:new:@children[ :
@tabsi :@valueo:Sass::Script::List	:@separator:
space;iS;@;[o; 	;iS;@;"property;	"propertyo; 	;iS;@;"
speed;	"
speedo; 	;iS;@;"	ease;	"	easeo;
;iT;@;["-moz-transition;;;[ ;i ;o;	;;;iT;@;[o; 	;iT;@;"property;	"propertyo; 	;iT;@;"
speed;	"
speedo; 	;iT;@;"	ease;	"	easeo;;iV;@;["transition;;;
[ ;i ;o;	;; ;iV;@;[o;	;iV;@;"property;"propertyo;	;iV;@;"
speed;"
speedo;	;iV;@;"	ease;"	ease;0;[[o;;@;"property;"propertyo;!	;iQ;@;;";"all[o;;@;"
speed;"
speedo:Sass::Script::Number;iQ;@:@denominator_units[ :@numerator_units["ms:@original"
300ms;i,[o;;@;"	ease;"	easeo;!	;iQ;@;;";"ease-outo;
;iY;@;
[ ;;;["@/* We use this to add box-sizing across browser prefixes */o;;iZ;@;"box-sizing;	T;
[u;<[o:Sass::Script::Variable	:
@linei[:@options{ :
@name"experimental:@underscored_name"experimental0[o:Sass::Tree::PropNode;i\;@;["-moz-box-sizing:@prop_syntax:new:@children[ :
@tabsi :@valueo; 	;i\;@;"	type;	"	typeo;
;i];@;["-webkit-box-sizing;;;[ ;i ;o; 	;i];@;"	type;	"	typeo;;i_;@;["box-sizing;;;
[ ;i ;o;	;i_;@;"	type;"	type;0;[[o;;@;"	type;"	typeo;!	;iZ;@;;";"border-boxo;
;ib;@;
[ ;;;["6/* We use this to create equilateral triangles */o;;ic;@;"css-triangle;	T;
[o;;id;@;["content;;;
[ ;i ;o;!;@;;";"""o;;ie;@;["display;;;
[ ;i ;o;!;@;;";"
blocko;;if;@;["
width;;;
[ ;i ;o;!;@;;";"0o;;ig;@;["height;;;
[ ;i ;o;!;@;;";"0o;;ih;@;["border;;;
[ ;i ;o;	;; ;ih;@;[o;!	;ih;@;;";"
inseto;	;ih;@;"triangle-size;"triangle_sizeu;d[o:Sass::Script::Operation
:
@lineii:@operand1o:Sass::Script::Variable	;ii:@options{ :
@name"triangle-direction:@underscored_name"triangle_direction;	@:@operator:eq:@operand2o:Sass::Script::String	;ii;	@:
@type:identifier:@value"top0[o:Sass::Tree::PropNode;ij;	@;
["border-color:@prop_syntax:new:@children[ :
@tabsi ;o:Sass::Script::List	:@separator:
space;ij;	@;[	o;	;ij;	@;
"triangle-color;"triangle_coloro;	;ij;	@;;;"transparento;	;ij;	@;;;"transparento;	;ij;	@;;;"transparento;;ik;	@;
["border-top-style;;;[ ;i ;o;;	@;;;"
solidu;j[o:Sass::Script::Operation
:
@lineim:@operand1o:Sass::Script::Variable	;im:@options{ :
@name"triangle-direction:@underscored_name"triangle_direction;	@:@operator:eq:@operand2o:Sass::Script::String	;im;	@:
@type:identifier:@value"bottom0[o:Sass::Tree::PropNode;in;	@;
["border-color:@prop_syntax:new:@children[ :
@tabsi ;o:Sass::Script::List	:@separator:
space;in;	@;[	o;	;in;	@;;;"transparento;	;in;	@;;;"transparento;	;in;	@;
"triangle-color;"triangle_coloro;	;in;	@;;;"transparento;;io;	@;
["border-bottom-style;;;[ ;i ;o;;	@;;;"
solidu;f[o:Sass::Script::Operation
:
@lineiq:@operand1o:Sass::Script::Variable	;iq:@options{ :
@name"triangle-direction:@underscored_name"triangle_direction;	@:@operator:eq:@operand2o:Sass::Script::String	;iq;	@:
@type:identifier:@value"	left0[o:Sass::Tree::PropNode;ir;	@;
["border-color:@prop_syntax:new:@children[ :
@tabsi ;o:Sass::Script::List	:@separator:
space;ir;	@;[	o;	;ir;	@;;;"transparento;	;ir;	@;;;"transparento;	;ir;	@;;;"transparento;	;ir;	@;
"triangle-color;"triangle_coloro;;is;	@;
["border-left-style;;;[ ;i ;o;;	@;;;"
solidu;h[o:Sass::Script::Operation
:
@lineiu:@operand1o:Sass::Script::Variable	;iu:@options{ :
@name"triangle-direction:@underscored_name"triangle_direction;	@:@operator:eq:@operand2o:Sass::Script::String	;iu;	@:
@type:identifier:@value"
right0[o:Sass::Tree::PropNode;iv;	@;
["border-color:@prop_syntax:new:@children[ :
@tabsi ;o:Sass::Script::List	:@separator:
space;iv;	@;[	o;	;iv;	@;;;"transparento;	;iv;	@;
"triangle-color;"triangle_coloro;	;iv;	@;;;"transparento;	;iv;	@;;;"transparento;;iw;	@;
["border-right-style;;;[ ;i ;o;;	@;;;"
solid;0;[[o;;@;"triangle-size;"triangle_size0[o;;@;"triangle-color;"triangle_color0[o;;@;"triangle-direction;"triangle_direction0o;
;i{;@;
[ ;;;[")/* We use this to do clear floats */o;;i|;@;"clearfix;	T;
[o;;i};@;["
*zoom;;;
[ ;i ;o;!;@;;";"1o:Sass::Tree::RuleNode:
@rule["&:before, &:after;i~;@:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;i~:@members[o:Sass::Selector::Sequence;,[o:#Sass::Selector::SimpleSequence
;+@Ý;i~;,[o:Sass::Selector::Parent;+@Ý;i~o:Sass::Selector::Pseudo
;+@Ý;i~:	@arg0;["before;:
class:@sourceso:Set:
@hash{ :@subject0o;-;,[o;.
;+@Ý;i~;,[o;/;+@Ý;i~o;0
;+@Ý;i~;10;["
after;;2;3o;4;5{ ;60;	T;
[o;;i~;@;["content;;;
[ ;i ;o;!;@;;";"" "o;;i~;@;["display;;;
[ ;i ;o;!;@;;";"
table;i o;';(["&:after;i;@;)o;*;+" ;i;,[o;-;,[o;.
;+@;i;,[o;/;+@;io;0
;+@;i;10;["
after;;2;3o;4;5{ ;60;	T;
[o;;i;@;["
clear;;;
[ ;i ;o;!;@;;";"	both;i ;0;[ o;
;i~;@;
[ ;;;["@/* We use this to add a glowing effect to block elements */o;;i;@;"block-glowing-effect;	T;
[u;7[o:Sass::Script::Variable	:
@linei:@options{ :
@name"experimental:@underscored_name"experimental0[o:Sass::Tree::PropNode;i;@;["-webkit-transition:@prop_syntax:new:@children[ :
@tabsi :@valueo:Sass::Script::List	:@separator:
comma;i;@;[o;	;:
space;i;@;[o:Sass::Script::String	;i;@:
@type:identifier;"-webkit-box-shadowo; 	;i;@;"fade-time;	"fade_timeo;	;;;i;@;[o;	;i;@;;;"border-coloro; 	;i;@;"fade-time;	"fade_timeo;	;i;@;;;"ease-in-outo;
;i;@;["-moz-transition;;;[ ;i ;o;	;;;i;@;[o;	;;;i;@;[o;	;i;@;;;"-moz-box-shadowo; 	;i;@;"fade-time;	"fade_timeo;	;;;i;@;[o;	;i;@;;;"border-coloro; 	;i;@;"fade-time;	"fade_timeo;	;i;@;;;"ease-in-outo;;i;@;["transition;;;
[ ;i ;o;	;:
comma;i;@;[o;	;; ;i;@;[o;!	;i;@;;";"box-shadowo;	;i;@;"fade-time;"fade_timeo;	;; ;i;@;[o;!	;i;@;;";"border-coloro;	;i;@;"fade-time;"fade_timeo;!	;i;@;;";"ease-in-outo;';(["&:o;	;i;@;"selector;"selector;i;@;	T;
[u;Ë[o:Sass::Script::Variable	:
@linei:@options{ :
@name"experimental:@underscored_name"experimental0[o:Sass::Tree::PropNode;i;@;["-webkit-box-shadow:@prop_syntax:new:@children[ :
@tabsi :@valueo:Sass::Script::List	:@separator:
space;i;@;[	o:Sass::Script::Number;i;@:@denominator_units[ :@numerator_units[ :@original"0;i o;;i;@;@;[ ;"0;i o;;i;@;[ ;["px;"5px;i
o; 	;i;@;"glowing-effect-color;	"glowing_effect_coloro;
;i;@;["-moz-box-shadow;;;[ ;i ;o;	;;;i;@;[	o;;i;@;@;[ ;"0;i o;;i;@;@;[ ;"0;i o;;i;@;[ ;["px;"5px;i
o; 	;i;@;"glowing-effect-color;	"glowing_effect_coloro;;i;@;["box-shadow;;;
[ ;i ;o;	;; ;i;@;[	o;#;i;@;$[ ;%[ ;&"0;i o;#;i;@;$@E;%[ ;&"0;i o;#;i;@;$[ ;%["px;&"5px;i
o;	;i;@;"glowing-effect-color;"glowing_effect_coloro;;i;@;["border-color;;;
[ ;i ;o;	;i;@;"glowing-effect-color;"glowing_effect_color;i ;0;[[o;;@;"selector;"selectoro;!	;i;@;;";"
focus[o;;@;"fade-time;"fade_timeo;#;i;@;$[ ;%["ms;&"
300ms;i,[o;;@;"glowing-effect-color;"glowing_effect_coloro:Sass::Script::Funcall:@keywords{ ;i;@;"fade-out;0;[o;	;i;@;"primary-color;"primary_coloro;#;i;@;$@E;%[ ;&"	0.25;f	0.25o;
;i;@;
[ ;;;["%/*
 * Foundation Variables
 * */o;
;i;@;
[ ;;;["/* The default font-size is set to 100% of the browser style sheet (usually 16px)
 * for compatibility with brower-based text zoom or user-set defaults. */o;
;i;@;
[ ;;;["/* Since the typical default browser font-size is 16px, that makes the calculation for grid size.
 * If you want your base font-size to be different and not have it effect the grid breakpoints,
 * set $em-base to $base-font-size and make sure $base-font-size is a px value. */o;;i;"!default;@;"base-font-size;o;#;i;@;$[ ;%["%;&"	100%;ii;
[ o;
;i;@;
[ ;;;["B/* $base-line-height is 24px while $base-font-size is 16px */o;;i;"!default;@;"base-line-height;o;#;i;@;$[ ;%["%;&"	150%;i;
[ o;
;i;@;
[ ;;;["M/* This is the default html and body font-size for the base em value. */o;;i ;"!default;@;"em-base;o;#;i ;@;$[ ;%["px;&"	16px;i;
[ o;
;i¢;@;
[ ;;;["7/* It strips the unit of measure and returns it */o:Sass::Tree::FunctionNode;i£;@;"strip-unit;	T;
[o:Sass::Tree::ReturnNode	;i¤;@;o:Sass::Script::Operation
;i¤:@operand1o;	;i¤;@;"num;"num;@:@operator:div:@operand2o;<
;i¤;=o;<
;i¤;=o;	;i¤;@;"num;"num;@;>:
times;@o;#;i¤;@;$@E;%[ ;&"0;i ;@;>:	plus;@o;#;i¤;@;$@E;%[ ;&"1;i;
[ ;0;[[o;;@;"num;"num0o;
;i§;@;
[ ;;;["	/* New Syntax, allows to optionally calculate on a different base value to counter compounding effect of em's.
 * Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported
 * em-calc(10 20 30px 40);
 * Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
 * em-calc((10, 20, 30, 40px));
 * Optionally call with a different base (eg: 8px) to calculate em.
 * em-calc(16px 32px 48px, 8px);
 * If you require to comma separate your list
 * em-calc((16px, 32px, 48), 8px); */o;:;i±;@;"convert-to-em;	T;
[	o;;i²;0;@;"
value;o;<
;i²;=o;<
;i²;=o;8;9{ ;i²;@;"strip-unit;0;[o;	;i²;@;"
value;"
value;@;>;?;@o;8;9{ ;i²;@;"strip-unit;0;[o;	;i²;@;"base-value;"base_value;@;>;A;@o;#;i²;@;$[ ;%["em;&"1em;i;
[ u;|[o:Sass::Script::Operation
:
@linei³:@operand1o:Sass::Script::Variable	;i³:@options{ :
@name"
value:@underscored_name"
value;	@:@operator:eq:@operand2o:Sass::Script::Number;i³;	@:@denominator_units[ :@numerator_units["em:@original"0em:@valuei 0[o:Sass::Tree::VariableNode;i³:@guarded0;	@;
"
value:
@expro;;i³;	@;[ ;[ ;"0;i :@children[ o;
;i³;@;
[ ;;;["/* Turn 0em into 0 */o;;	;i´;@;o;	;i´;@;"
value;"
value;
[ ;0;[[o;;@;"
value;"
value0[o;;@;"base-value;"base_valueo;	;i±;@;"em-base;"em_baseo;:;i·;@;"em-calc;	T;
[
o;;i¸;0;@;"max;o;8;9{ ;i¸;@;"length;0;[o;	;i¸;@;"values;"values;
[ u;[o:Sass::Script::Operation
:
@lineiº:@operand1o:Sass::Script::Variable	;iº:@options{ :
@name"max:@underscored_name"max;	@:@operator:eq:@operand2o:Sass::Script::Number;iº;	@:@denominator_units[ :@numerator_units[ :@original"1:@valuei0[o:Sass::Tree::ReturnNode	;iº;	@:
@expro:Sass::Script::Funcall:@keywords{ ;iº;	@;
"convert-to-em:@splat0:
@args[o;;{ ;iº;	@;
"nth;0;[o;	;iº;	@;
"values;"valueso;;iº;	@;@;[ ;"1;io;	;iº;	@;
"base-value;"base_value:@children[ o;;i¼;0;@;"emValues;o;	;; ;i¼;@;[ ;
[ o:Sass::Tree::ForNode:
@fromo;#;i½;@;$@E;%[ ;&"1;i;i½;@:	@var"i;	T;
[o;;i¾;0;@;"emValues;o;8;9{ ;i¾;@;"append;0;[o;	;i¾;@;"emValues;"emValueso;8;9{ ;i¾;@;"convert-to-em;0;[o;8;9{ ;i¾;@;"nth;0;[o;	;i¾;@;"values;"valueso;	;i¾;@;"i;"io;	;i¾;@;"base-value;"base_value;
[ :@too;	;i½;@;"max;"max:@exclusiveFo;;	;iÀ;@;o;	;iÀ;@;"emValues;"emValues;
[ ;0;[[o;;@;"values;"values0[o;;@;"base-value;"base_valueo;	;i·;@;"em-base;"em_baseo;
;iÃ;@;
[ ;;;["%/* Support for the old syntax */o;:;iÅ;@;"emCalc;	T;
[o;;	;iÆ;@;o;8;9{ ;iÆ;@;"em-calc;0;[o;	;iÆ;@;"values;"values;
[ ;0;[[o;;@;"values;"values0o;
;iÉ;@;
[ ;;;["/* Maybe you want to create rems with pixels
 * $rem-base: 0.625 !default; //Set the value corresponding to body font size. In this case, you should set as: body {font-size: 62.5%;}
 * @function remCalc($pxWidth) {
 *   @return $pxWidth / $rem-base * 1rem;
 * } */o;
;iÏ;@;
[ ;;;["8/* We use these to control various global styles */o;;iÐ;"!default;@;"body-bg;o:Sass::Script::Color	;iÐ;@:@attrs{	:rediÿ:
alphai:
greeniÿ:	blueiÿ;0;
[ o;;iÑ;"!default;@;"body-font-color;o;H	;iÑ;@;I{	;Ji';Ki;Li';Mi';0;
[ o;;iÒ;"!default;@;"body-font-family;o;	;;7;iÒ;@;[
o;!	;iÒ;@;:string;"Helvetica Neueo;!	;iÒ;@;;N;"Helveticao;!	;iÒ;@;;";"Helveticao;!	;iÒ;@;;";"
Arialo;!	;iÒ;@;;";"sans-serif;
[ o;;iÓ;"!default;@;"body-font-weight;o;!	;iÓ;@;;";"normal;
[ o;;iÔ;"!default;@;"body-font-style;o;!	;iÔ;@;;";"normal;
[ o;
;iÖ;@;
[ ;;;["0/* We use this to control font-smoothing */o;;i×;"!default;@;"font-smoothing;o;!	;i×;@;;";"subpixel-antialiased;
[ o;
;iÙ;@;
[ ;;;[":/* We use these to control text direction settings */o;;iÚ;"!default;@;"text-direction;o;!	;iÚ;@;;";"ltr;
[ o;
;iÜ;@;
[ ;;;["h/* NOTE: No need to change this conditional statement, $text-direction variable controls it all. */o;;iÝ;"!default;@;"default-float;o;!	;iÝ;@;;";"	left;
[ o;;iÞ;"!default;@;"opposite-direction;o;!	;iÞ;@;;";"
right;
[ u;¼[o:Sass::Script::Operation
:
@lineiß:@operand1o:Sass::Script::Variable	;iß:@options{ :
@name"text-direction:@underscored_name"text_direction;	@:@operator:eq:@operand2o:Sass::Script::String	;iß;	@:
@type:identifier:@value"ltru:Sass::Tree::IfNode÷[00[o:Sass::Tree::VariableNode:
@lineiã:@guarded0:@options{ :
@name"default-float:
@expro:Sass::Script::String	;iã;@:
@type:identifier:@value"
right:@children[ o; ;iä;0;@;	"opposite-direction;
o;	;iä;@;;;"	left;[ [o:Sass::Tree::VariableNode;ià:@guarded0;	@;
"default-float:
@expro;	;ià;	@;;;"	left:@children[ o;;iá;0;	@;
"opposite-direction;o;	;iá;	@;;;"
right;[ o;
;iç;@;
[ ;;;["4/* We use these as default colors throughout */o;;iè;"!default;@;"primary-color;o;H	;iè;@;I{	;Ji0;Ki;Li¦;MiË;0;
[ o;;ié;"!default;@;"secondary-color;o;H	;ié;@;I{	;Jié;Ki;Lié;Mié;0;
[ o;;iê;"!default;@;"alert-color;o;H	;iê;@;I{	;JiÆ;Ki;Li;Mi;0;
[ o;;ië;"!default;@;"success-color;o;H	;ië;@;I{	;Jib;Ki;Li¤;Mi(;0;
[ o;
;ií;@;
[ ;;;["W/* We use these to make sure border radius matches unless we want it different. */o;;iî;"!default;@;"global-radius;o;#;iî;@;$[ ;%["px;&"3px;i;
[ o;;iï;"!default;@;"global-rounded;o;#;iï;@;$[ ;%["px;&"1000px;iè;
[ o;
;iñ;@;
[ ;;;["L/* We use these to control inset shadow shiny edges and depressions. */o;;iò;"!default;@;"shiny-edge-size;o;	;; ;iò;@;[o;#;iò;@;$@E;%[ ;&"0;i o;#;iò;@;$[ ;%["px;&"1px;io;#;iò;@;$@E;%[ ;&"0;i ;
[ o;;ió;"!default;@;"shiny-edge-color;o;8;9{ ;ió;@;"	rgba;0;[o;H	;ió;@;I{	;Jiÿ;Ki;Liÿ;Miÿ;0o;#;ió;@;$@E;%[ ;&"0.5;f0.5;
[ o;;iô;"!default;@;"shiny-edge-active-color;o;8;9{ ;iô;@;"	rgba;0;[o;H	;iô;@;I{	;Ji ;Ki;Li ;Mi ;0o;#;iô;@;$@E;%[ ;&"0.2;f0.20000000000000001 ;
[ o;
;iö;@;
[ ;;;["[/* We use this to control whether or not CSS classes come through in the gem files. */o;;i÷;"!default;@;"include-html-classes;o;;i÷;@;T;
[ o;;iø;"!default;@;"include-print-styles;o;;iø;@;T;
[ o;;iù;"!default;@;" include-html-global-classes;o;	;iù;@;"include-html-classes;"include_html_classes;
[ o;
;iû;@;
[ ;;;["/* Media Queries */o;;iü;"!default;@;"small-screen;o;#;iü;@;$[ ;%["px;&"
768px;i ;
[ o;;iý;"!default;@;"medium-screen;o;#;iý;@;$[ ;%["px;&"1280px;i ;
[ o;;iþ;"!default;@;"large-screen;o;#;iþ;@;$[ ;%["px;&"1440px;i ;
[ o;;i ;"!default;@;"screen;o;!	;i ;@;;N;"only screen;
[ o;;i;"!default;@;"
small;o:&Sass::Script::StringInterpolation
:	@mido;	;i;@;"small-screen;"small_screen;i;@:@beforeo;!	;i;@;;N;"!only screen and (min-width: :@aftero;!	;i;@;;N;");
[ o;;i;"!default;@;"medium;o;O
;Po;	;i;@;"medium-screen;"medium_screen;i;@;Qo;!	;i;@;;N;" only screen and (min-width:;Ro;!	;i;@;;N;");
[ o;;i;"!default;@;"
large;o;O
;Po;	;i;@;"large-screen;"large_screen;i;@;Qo;!	;i;@;;N;" only screen and (min-width:;Ro;!	;i;@;;N;");
[ o;;i;"!default;@;"landscape;o;!	;i;@;;N;"-only screen and (orientation: landscape);
[ o;;i;"!default;@;"portrait;o;!	;i;@;;N;",only screen and (orientation: portrait);
[ o;
;i;@;
[ ;;;["H/* Used to provide media query values for javascript components. */o;';(["meta.foundation-mq-small;i;@;)o;*;+" ;i;,[o;-;,[o;.
;+@;i;,[o:Sass::Selector::Element	;+@:@namespace0;i;["	metao:Sass::Selector::Class;+@;i;["foundation-mq-small;3o;4;5{ ;60;	T;
[o;;i	;@;["font-family;;;
[ ;i ;o;	;i	;@;"
small;"
smallo;;i
;@;["
width;;;
[ ;i ;o;	;i
;@;"small-screen;"small_screen;i o;';(["meta.foundation-mq-medium;i;@;)o;*;+" ;i;,[o;-;,[o;.
;+@¢;i;,[o;S	;+@¢;T0;i;["	metao;U;+@¢;i;["foundation-mq-medium;3o;4;5{ ;60;	T;
[o;;i;@;["font-family;;;
[ ;i ;o;	;i;@;"medium;"mediumo;;i;@;["
width;;;
[ ;i ;o;	;i;@;"medium-screen;"medium_screen;i o;';(["meta.foundation-mq-large;i;@;)o;*;+" ;i;,[o;-;,[o;.
;+@Ã;i;,[o;S	;+@Ã;T0;i;["	metao;U;+@Ã;i;["foundation-mq-large;3o;4;5{ ;60;	T;
[o;;i;@;["font-family;;;
[ ;i ;o;	;i;@;"
large;"
largeo;;i;@;["
width;;;
[ ;i ;o;	;i;@;"large-screen;"large_screen;i o;
;i;@;
[ ;;;["w/*We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet */o;;i;"!default;@;"cursor-crosshair-value;o;!	;i;@;;";"crosshair;
[ o;;i;"!default;@;"cursor-default-value;o;!	;i;@;;";"default;
[ o;;i;"!default;@;"cursor-pointer-value;o;!	;i;@;;";"pointer;
[ o;;i;"!default;@;"cursor-help-value;o;!	;i;@;;";"	help;
[ o;;i;"!default;@;"cursor-text-value;o;!	;i;@;;";"	text;
[ u;p[o:Sass::Script::Variable	:
@linei:@options{ :
@name" include-html-global-classes:@underscored_name" include_html_global_classes0[!o:Sass::Tree::CommentNode
;i!;@:@children[ :
@type:silent:@value["F/* Set box-sizing globally to handle padding and border widths */o:Sass::Tree::RuleNode:
@rule["*,
  *:before,
  *:after;i$;@:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;i$:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;@;i$;[o:Sass::Selector::Universal;@:@namespace0;i$:@sourceso:Set:
@hash{ :@subject0o;;["
o;
;@;i$;[o;;@;0;i$o:Sass::Selector::Pseudo
;@;i$:	@arg0;["before;:
class;o;;{ ;0o;;["
o;
;@;i$;[o;;@;0;i$o;
;@;i$;0;["
after;;;o;;{ ;0:@has_childrenT;[o:Sass::Tree::MixinNode:@keywords{ ;i%;@;"box-sizing;[ :@splat0:
@args[o:Sass::Script::String	;i%;@;:identifier;"border-box:
@tabsi o;;["html,
  body;i);@;o;;" ;i);[o;;[o;
;@>;i);[o:Sass::Selector::Element	;@>;0;i);["	html;o;;{ ;0o;;["
o;
;@>;i);[o;(	;@>;0;i);["	body;o;;{ ;0; T;[o:Sass::Tree::PropNode;i);@;["font-size:@prop_syntax:new;[ ;'i ;o; 	;i);@;"base-font-size;	"base_font_size;'i o;

;i+;@;[ ;;;["/* Default body styles */o;;["	body;i,;@;o;;" ;i,;[o;;[o;
;@c;i,;[o;(	;@c;0;i,;["	body;o;;{ ;0; T;[o;);i-;@;["background;*;+;[ ;'i ;o; 	;i-;@;"body-bg;	"body_bgo;);i.;@;["
color;*;+;[ ;'i ;o; 	;i.;@;"body-font-color;	"body_font_coloro;);i/;@;["padding;*;+;[ ;'i ;o;%;@;;&;"0o;);i0;@;["margin;*;+;[ ;'i ;o;%;@;;&;"0o;);i1;@;["font-family;*;+;[ ;'i ;o; 	;i1;@;"body-font-family;	"body_font_familyo;);i2;@;["font-weight;*;+;[ ;'i ;o; 	;i2;@;"body-font-weight;	"body_font_weighto;);i3;@;["font-style;*;+;[ ;'i ;o; 	;i3;@;"body-font-style;	"body_font_styleo;);i4;@;["line-height;*;+;[ ;'i ;o;%;@;;&;"1o;

;i4;@;[ ;;;["F/* Set to $base-line-height to take on browser default of 150% */o;);i5;@;["position;*;+;[ ;'i ;o;%;@;;&;"relativeo;);i6;@;["cursor;*;+;[ ;'i ;o; 	;i6;@;"cursor-default-value;	"cursor_default_value;'i o;;["a:hover;i9;@;o;;" ;i9;[o;;[o;
;@´;i9;[o;(	;@´;0;i9;["ao;
;@´;i9;0;["
hover;;;o;;{ ;0; T;[o;);i9;@;["cursor;*;+;[ ;'i ;o; 	;i9;@;"cursor-pointer-value;	"cursor_pointer_value;'i o;

;i;;@;[ ;;;["B/* Grid Defaults to get images and embeds to work properly */o;;["img,
  object,
  embed;i>;@;o;;" ;i>;[o;;[o;
;@Ò;i>;[o;(	;@Ò;0;i>;["img;o;;{ ;0o;;["
o;
;@Ò;i>;[o;(	;@Ò;0;i>;["object;o;;{ ;0o;;["
o;
;@Ò;i>;[o;(	;@Ò;0;i>;["
embed;o;;{ ;0; T;[o;);i>;@;["max-width;*;+;[ ;'i ;o;%;@;;&;"	100%o;);i>;@;["height;*;+;[ ;'i ;o;%;@;;&;"	auto;'i o;;["object,
  embed;iA;@;o;;" ;iA;[o;;[o;
;@;iA;[o;(	;@;0;iA;["object;o;;{ ;0o;;["
o;
;@;iA;[o;(	;@;0;iA;["
embed;o;;{ ;0; T;[o;);iA;@;["height;*;+;[ ;'i ;o;%;@;;&;"	100%;'i o;;["img;iB;@;o;;" ;iB;[o;;[o;
;@";iB;[o;(	;@";0;iB;["img;o;;{ ;0; T;[o;);iB;@;["-ms-interpolation-mode;*;+;[ ;'i ;o;%;@;;&;"bicubic;'i o;;["#map_canvas,
  .map_canvas;iE;@;o;;" ;iE;[o;;[o;
;@8;iE;[o:Sass::Selector::Id;@8;iE;["map_canvas;o;;{ ;0o;;["
o;
;@8;iE;[o:Sass::Selector::Class;@8;iE;["map_canvas;o;;{ ;0; T;[o;;["img,
    embed,
    object;iH;@;o;;" ;iH;[o;;[o;
;@R;iH;[o;(	;@R;0;iH;["img;o;;{ ;0o;;["
o;
;@R;iH;[o;(	;@R;0;iH;["
embed;o;;{ ;0o;;["
o;
;@R;iH;[o;(	;@R;0;iH;["object;o;;{ ;0; T;[o;);iH;@;["max-width;*;+;[ ;'i ;o;%;@;;&;"none !important;'i ;'i o;

;iL;@;[ ;;;[",/* Miscellaneous useful HTML classes */o;;["
.left;iM;@;o;;" ;iM;[o;;[o;
;@;iM;[o;-;@;iM;["	left;o;;{ ;0; T;[o;);iM;@;["
float;*;+;[ ;'i ;o;%;@;;&;"left !important;'i o;;[".right;iN;@;o;;" ;iN;[o;;[o;
;@;iN;[o;-;@;iN;["
right;o;;{ ;0; T;[o;);iN;@;["
float;*;+;[ ;'i ;o;%;@;;&;"right !important;'i o;;[".text-left;iO;@;o;;" ;iO;[o;;[o;
;@¬;iO;[o;-;@¬;iO;["text-left;o;;{ ;0; T;[o;);iO;@;["text-align;*;+;[ ;'i ;o;%;@;;&;"left !important;'i o;;[".text-right;iP;@;o;;" ;iP;[o;;[o;
;@Â;iP;[o;-;@Â;iP;["text-right;o;;{ ;0; T;[o;);iP;@;["text-align;*;+;[ ;'i ;o;%;@;;&;"right !important;'i o;;[".text-center;iQ;@;o;;" ;iQ;[o;;[o;
;@Ø;iQ;[o;-;@Ø;iQ;["text-center;o;;{ ;0; T;[o;);iQ;@;["text-align;*;+;[ ;'i ;o;%;@;;&;"center !important;'i o;;[".text-justify;iR;@;o;;" ;iR;[o;;[o;
;@î;iR;[o;-;@î;iR;["text-justify;o;;{ ;0; T;[o;);iR;@;["text-align;*;+;[ ;'i ;o;%;@;;&;"justify !important;'i o;;["
.hide;iS;@;o;;" ;iS;[o;;[o;
;@;iS;[o;-;@;iS;["	hide;o;;{ ;0; T;[o;);iS;@;["display;*;+;[ ;'i ;o;%;@;;&;"	none;'i o;

;iU;@;[ ;;;["â/* Font smoothing
 * Antialiased font smoothing works best for light text on a dark background.
 * Apply to single elements instead of globally to body.
 * Note this only applies to webkit-based desktop browsers on the Mac. */o;;[".antialiased;iY;@;o;;" ;iY;[o;;[o;
;@;iY;[o;-;@;iY;["antialiased;o;;{ ;0; T;[o;);iY;@;["-webkit-font-smoothing;*;+;[ ;'i ;o;%;@;;&;"antialiased;'i o;

;i[;@;[ ;;;["W/* Get rid of gap under images by making them display: inline-block; by default */o;;["img;i\;@;o;;" ;i\;[o;;[o;
;@8;i\;[o;(	;@8;0;i\;["img;o;;{ ;0; T;[o;);i];@;["display;*;+;[ ;'i ;o;%;@;;&;"inline-blocko;);i^;@;["vertical-align;*;+;[ ;'i ;o;%;@;;&;"middle;'i o;

;ia;@;[ ;;;["(/*
 * Global resets for forms
 * */o;

;ie;@;[ ;;;[";/* Make sure textarea takes on height automatically */o;;["textarea;if;@;o;;" ;if;[o;;[o;
;@\;if;[o;(	;@\;0;if;["textarea;o;;{ ;0; T;[o;);if;@;["height;*;+;[ ;'i ;o;%;@;;&;"	autoo;);if;@;["min-height;*;+;[ ;'i ;o;%;@;;&;"	50px;'i o;

;ih;@;[ ;;;["5/* Make select elements 100% width by default */o;;["select;ii;@;o;;" ;ii;[o;;[o;
;@|;ii;[o;(	;@|;0;ii;["select;o;;{ ;0; T;[o;);ii;@;["
width;*;+;[ ;'i ;o;%;@;;&;"	100%;'i 